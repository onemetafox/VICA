version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn crypto_project.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=crypto_db_user
      - POSTGRES_PASSWORD=crypto_db_pass
      - POSTGRES_DB=crypto_db

  worker:
    build: .
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.env.prod
    command: >
      sh -c "celery -A crypto_project.celery worker -l DEBUG --pool=solo"
    depends_on:
      - redis
      - db

  heartbeat:
    build: .
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.env.prod
    command: >
      sh -c "celery -A crypto_project.celery beat -l DEBUG"
    depends_on:
      - redis
      - db

  redis:
    image: redis:7-alpine

  flower:
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    image: django_celery_example_celery_flower
    command: celery -A crypto_project.celery flower
    volumes:
      - .:/usr/src/app
    env_file:
      - ./.env.prod
    ports:
      - 5557:5555
    depends_on:
      - redis
      - worker
    
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:

