version: '3.8'

services:
  app:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=crypto_db_user
      - POSTGRES_PASSWORD=crypto_db_pass
      - POSTGRES_DB=crypto_db

  worker:
    build: .
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.env.dev
    command: >
      sh -c "celery -A crypto_project.celery worker -l DEBUG"
    depends_on:
      - redis
      - db

  heartbeat:
    build: .
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.env.dev
    command: >
      sh -c "celery -A crypto_project.celery beat -l DEBUG"
    depends_on:
      - redis
      - db

  redis:
    image: redis:7-alpine

  flower:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: django_celery_example_celery_flower
    command: celery -A crypto_project.celery flower
    volumes:
      - .:/usr/src/app
    env_file:
      - ./.env.dev
    ports:
      - 5557:5555
    depends_on:
      - redis
      - worker

volumes:
  postgres_data: